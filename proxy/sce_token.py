#! /usr/bin/python2.7

"""Token constants (from "sql-tokenizer.h")."""

#  This file is automatically generated; please don't muck it up!
#
#  To update the symbols in this file, 'cd' to the top directory of
#  the python source tree after building the interpreter and run:
#
#    python sce_token.py

#--start constants--
TK_UNKNOWN = 0
TK_LE = 1
TK_GE = 2
TK_LT = 3
TK_GT = 4
TK_EQ = 5
TK_NE = 6
TK_STRING = 7
TK_COMMENT = 8
TK_LITERAL = 9
TK_FUNCTION = 10
TK_INTEGER = 11
TK_FLOAT = 12
TK_DOT = 13
TK_COMMA = 14
TK_ASSIGN = 15
TK_OBRACE = 16
TK_CBRACE = 17
TK_SEMICOLON = 18
TK_STAR = 19
TK_PLUS = 20
TK_MINUS = 21
TK_DIV = 22
TK_BITWISE_AND = 23
TK_BITWISE_OR = 24
TK_BITWISE_XOR = 25
TK_LOGICAL_AND = 26
TK_LOGICAL_OR = 27
TK_SQL_ACCESSIBLE = 28
TK_SQL_ACTION = 29
TK_SQL_ADD = 30
TK_SQL_ALL = 31
TK_SQL_ALTER = 32
TK_SQL_ANALYZE = 33
TK_SQL_AND = 34
TK_SQL_AS = 35
TK_SQL_ASC = 36
TK_SQL_ASENSITIVE = 37
TK_SQL_BEFORE = 38
TK_SQL_BETWEEN = 39
TK_SQL_BIGINT = 40
TK_SQL_BINARY = 41
TK_SQL_BIT = 42
TK_SQL_BLOB = 43
TK_SQL_BOTH = 44
TK_SQL_BY = 45
TK_SQL_CALL = 46
TK_SQL_CASCADE = 47
TK_SQL_CASE = 48
TK_SQL_CHANGE = 49
TK_SQL_CHAR = 50
TK_SQL_CHARACTER = 51
TK_SQL_CHECK = 52
TK_SQL_COLLATE = 53
TK_SQL_COLUMN = 54
TK_SQL_CONDITION = 55
TK_SQL_CONSTRAINT = 56
TK_SQL_CONTINUE = 57
TK_SQL_CONVERT = 58
TK_SQL_CREATE = 59
TK_SQL_CROSS = 60
TK_SQL_CURRENT_DATE = 61
TK_SQL_CURRENT_TIME = 62
TK_SQL_CURRENT_TIMESTAMP = 63
TK_SQL_CURRENT_USER = 64
TK_SQL_CURSOR = 65
TK_SQL_DATABASE = 66
TK_SQL_DATABASES = 67
TK_SQL_DATE = 68
TK_SQL_DAY_HOUR = 69
TK_SQL_DAY_MICROSECOND = 70
TK_SQL_DAY_MINUTE = 71
TK_SQL_DAY_SECOND = 72
TK_SQL_DEC = 73
TK_SQL_DECIMAL = 74
TK_SQL_DECLARE = 75
TK_SQL_DEFAULT = 76
TK_SQL_DELAYED = 77
TK_SQL_DELETE = 78
TK_SQL_DESC = 79
TK_SQL_DESCRIBE = 80
TK_SQL_DETERMINISTIC = 81
TK_SQL_DISTINCT = 82
TK_SQL_DISTINCTROW = 83
TK_SQL_DIV = 84
TK_SQL_DOUBLE = 85
TK_SQL_DROP = 86
TK_SQL_DUAL = 87
TK_SQL_EACH = 88
TK_SQL_ELSE = 89
TK_SQL_ELSEIF = 90
TK_SQL_ENCLOSED = 91
TK_SQL_ENUM = 92
TK_SQL_ESCAPED = 93
TK_SQL_EXISTS = 94
TK_SQL_EXIT = 95
TK_SQL_EXPLAIN = 96
TK_SQL_FALSE = 97
TK_SQL_FETCH = 98
TK_SQL_FLOAT = 99
TK_SQL_FLOAT4 = 100
TK_SQL_FLOAT8 = 101
TK_SQL_FOR = 102
TK_SQL_FORCE = 103
TK_SQL_FOREIGN = 104
TK_SQL_FROM = 105
TK_SQL_FULLTEXT = 106
TK_SQL_GRANT = 107
TK_SQL_GROUP = 108
TK_SQL_HAVING = 109
TK_SQL_HIGH_PRIORITY = 110
TK_SQL_HOUR_MICROSECOND = 111
TK_SQL_HOUR_MINUTE = 112
TK_SQL_HOUR_SECOND = 113
TK_SQL_IF = 114
TK_SQL_IGNORE = 115
TK_SQL_IN = 116
TK_SQL_INDEX = 117
TK_SQL_INFILE = 118
TK_SQL_INNER = 119
TK_SQL_INOUT = 120
TK_SQL_INSENSITIVE = 121
TK_SQL_INSERT = 122
TK_SQL_INT = 123
TK_SQL_INT1 = 124
TK_SQL_INT2 = 125
TK_SQL_INT3 = 126
TK_SQL_INT4 = 127
TK_SQL_INT8 = 128
TK_SQL_INTEGER = 129
TK_SQL_INTERVAL = 130
TK_SQL_INTO = 131
TK_SQL_IS = 132
TK_SQL_ITERATE = 133
TK_SQL_JOIN = 134
TK_SQL_KEY = 135
TK_SQL_KEYS = 136
TK_SQL_KILL = 137
TK_SQL_LEADING = 138
TK_SQL_LEAVE = 139
TK_SQL_LEFT = 140
TK_SQL_LIKE = 141
TK_SQL_LIMIT = 142
TK_SQL_LINEAR = 143
TK_SQL_LINES = 144
TK_SQL_LOAD = 145
TK_SQL_LOCALTIME = 146
TK_SQL_LOCALTIMESTAMP = 147
TK_SQL_LOCK = 148
TK_SQL_LONG = 149
TK_SQL_LONGBLOB = 150
TK_SQL_LONGTEXT = 151
TK_SQL_LOOP = 152
TK_SQL_LOW_PRIORITY = 153
TK_SQL_MASTER_SSL_VERIFY_SERVER_CERT = 154
TK_SQL_MATCH = 155
TK_SQL_MEDIUMBLOB = 156
TK_SQL_MEDIUMINT = 157
TK_SQL_MEDIUMTEXT = 158
TK_SQL_MIDDLEINT = 159
TK_SQL_MINUTE_MICROSECOND = 160
TK_SQL_MINUTE_SECOND = 161
TK_SQL_MOD = 162
TK_SQL_MODIFIES = 163
TK_SQL_NATURAL = 164
TK_SQL_NO = 165
TK_SQL_NOT = 166
TK_SQL_NO_WRITE_TO_BINLOG = 167
TK_SQL_NULL = 168
TK_SQL_NUMERIC = 169
TK_SQL_ON = 170
TK_SQL_OPTIMIZE = 171
TK_SQL_OPTION = 172
TK_SQL_OPTIONALLY = 173
TK_SQL_OR = 174
TK_SQL_ORDER = 175
TK_SQL_OUT = 176
TK_SQL_OUTER = 177
TK_SQL_OUTFILE = 178
TK_SQL_PRECISION = 179
TK_SQL_PRIMARY = 180
TK_SQL_PROCEDURE = 181
TK_SQL_PURGE = 182
TK_SQL_RANGE = 183
TK_SQL_READ = 184
TK_SQL_READ_ONLY = 185
TK_SQL_READS = 186
TK_SQL_READ_WRITE = 187
TK_SQL_REAL = 188
TK_SQL_REFERENCES = 189
TK_SQL_REGEXP = 190
TK_SQL_RELEASE = 191
TK_SQL_RENAME = 192
TK_SQL_REPEAT = 193
TK_SQL_REPLACE = 194
TK_SQL_REQUIRE = 195
TK_SQL_RESTRICT = 196
TK_SQL_RETURN = 197
TK_SQL_REVOKE = 198
TK_SQL_RIGHT = 199
TK_SQL_RLIKE = 200
TK_SQL_SCHEMA = 201
TK_SQL_SCHEMAS = 202
TK_SQL_SECOND_MICROSECOND = 203
TK_SQL_SELECT = 204
TK_SQL_SENSITIVE = 205
TK_SQL_SEPARATOR = 206
TK_SQL_SET = 207
TK_SQL_SHOW = 208
TK_SQL_SMALLINT = 209
TK_SQL_SPATIAL = 210
TK_SQL_SPECIFIC = 211
TK_SQL_SQL = 212
TK_SQL_SQL_BIG_RESULT = 213
TK_SQL_SQL_CALC_FOUND_ROWS = 214
TK_SQL_SQLEXCEPTION = 215
TK_SQL_SQL_SMALL_RESULT = 216
TK_SQL_SQLSTATE = 217
TK_SQL_SQLWARNING = 218
TK_SQL_SSL = 219
TK_SQL_STARTING = 220
TK_SQL_STRAIGHT_JOIN = 221
TK_SQL_TABLE = 222
TK_SQL_TERMINATED = 223
TK_SQL_TEXT = 224
TK_SQL_THEN = 225
TK_SQL_TIME = 226
TK_SQL_TIMESTAMP = 227
TK_SQL_TINYBLOB = 228
TK_SQL_TINYINT = 229
TK_SQL_TINYTEXT = 230
TK_SQL_TO = 231
TK_SQL_TRAILING = 232
TK_SQL_TRIGGER = 233
TK_SQL_TRUE = 234
TK_SQL_UNDO = 235
TK_SQL_UNION = 236
TK_SQL_UNIQUE = 237
TK_SQL_UNLOCK = 238
TK_SQL_UNSIGNED = 239
TK_SQL_UPDATE = 240
TK_SQL_USAGE = 241
TK_SQL_USE = 242
TK_SQL_USING = 243
TK_SQL_UTC_DATE = 244
TK_SQL_UTC_TIME = 245
TK_SQL_UTC_TIMESTAMP = 246
TK_SQL_VALUES = 247
TK_SQL_VARBINARY = 248
TK_SQL_VARCHAR = 249
TK_SQL_VARCHARACTER = 250
TK_SQL_VARYING = 251
TK_SQL_WHEN = 252
TK_SQL_WHERE = 253
TK_SQL_WHILE = 254
TK_SQL_WITH = 255
TK_SQL_WRITE = 256
TK_SQL_X509 = 257
TK_SQL_XOR = 258
TK_SQL_YEAR_MONTH = 259
TK_SQL_ZEROFILL = 260
TK_COMMENT_MYSQL = 261
TK_LAST_TOKEN = 262
#--end constants--

tok_name = {}
for _name, _value in globals().items():
    if type(_value) is type(0):
        tok_name[_value] = _name
del _name, _value

def main():
    import re
    import sys
    args = sys.argv[1:]
    inFileName = args and args[0] or "src/sql-tokenizer.h"
    outFileName = "sce_token.py"
    if len(args) > 1:
        outFileName = args[1]
    try:
        fp = open(inFileName)
    except IOError, err:
        sys.stdout.write("I/O error: %s\n" % str(err))
        sys.exit(1)
    lines = fp.read().split("\n")
    fp.close()
    prog = re.compile(
        "\s*(TK_[^,]*),?\s*",
        re.IGNORECASE)
    tokens = []
    for line in lines:
        match = prog.match(line)
        if match:
            token = match.group(1)
            tokens.append(token)          # reverse so we can sort them...
    # load the output skeleton from the target:
    try:
        fp = open(outFileName)
    except IOError, err:
        sys.stderr.write("I/O error: %s\n" % str(err))
        sys.exit(2)
    format = fp.read().split("\n")
    fp.close()
    try:
        start = format.index("#--start constants--") + 1
        end = format.index("#--end constants--")
    except ValueError:
        sys.stderr.write("target does not contain format markers")
        sys.exit(3)
    lines = []
    for i in range(len(tokens)):
        lines.append("%s = %d" % (tokens[i], i))
    format[start:end] = lines
    try:
        fp = open(outFileName, 'w')
    except IOError, err:
        sys.stderr.write("I/O error: %s\n" % str(err))
        sys.exit(4)
    fp.write("\n".join(format))
    fp.close()


if __name__ == "__main__":
    main()
